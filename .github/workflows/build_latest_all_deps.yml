on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '30 7,12 * * MON-FRI'

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: '1.16.14'

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Mango v4 'dev' branch
        uses: actions/checkout@v4
        with:
          repository: 'blockworks-foundation/mango-v4.git'
          submodules: true
          ref: 'dev'
          path: 'mango-v4'

      - name: Checkout Mango Feeds 'main' branch
        uses: actions/checkout@v4
        with:
          repository: 'blockworks-foundation/mango-feeds.git'
          submodules: true
          ref: 'main'
          path: 'mango-feeds'

      - name: Checkout Openbook v2 master branch
        uses: actions/checkout@v4
        with:
          repository: 'openbook-dex/openbook-v2.git'
          submodules: true
          ref: 'master'
          path: 'openbook-v2'

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: "1.70"
          components: rustfmt, clippy
          cache: true
          # avoid the default "-D warnings" which thrashes cache
          rustflags: ""

      # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            mango-v4/target/
            mango-feeds/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Patch mango-v4 Cargo files to point to local checkouts
        run: |
          cd mango-v4
          cat << END_OF_PATCH >> Cargo.toml
          [patch."https://github.com/openbook-dex/openbook-v2.git"]
          openbook-v2 = { path = '../openbook-v2/programs/openbook-v2' }
          END_OF_PATCH

      - name: Build Mango V4 against local Openbook V2
        run: |
          cd mango-v4
          cargo build --all-targets

      - name: Patch mango-feeds Cargo files to point to local checkouts
        run: |
          cd mango-feeds
          sed --in-place '/patch\.crates-io/a mango-v4 = { path = "../mango-v4/programs/mango-v4" }\nmango-v4-client = { path = "../mango-v4/lib/client" }' Cargo.toml

      - name: Build Mango Feeds against local Mango V4
        run: |
          cd mango-feeds
          cargo build --all-targets
          cargo test

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          echo "Generating keypair..."
          solana-keygen new -o "$HOME/.config/solana/id.json" --no-passphrase --silent
          echo Installing sbf toolchain...
          (cd /home/runner/.local/share/solana/install/active_release/bin/sdk/sbf/scripts; ./install.sh)

      - name: Run on-chain test
        run: |
          cargo test-sbf --features enable-gpl
          cargo +solana test-sbf --features enable-gpl

